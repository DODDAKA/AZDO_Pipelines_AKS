# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev

pool:
  name: AzureUbantuAgent
  demands: maven

variables:
  mavenPOMFile: 'pom.xml'

steps:
- task: Maven@3
  displayName: 'Maven Test'
  inputs:
    mavenPomFile: '$(mavenPOMFile)'
    goals: test

- task: Maven@3
  displayName: 'Maven Package'
  inputs:
    mavenPomFile: '$(mavenPOMFile)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@7
  displayName: 'Prepare analysis on SonarQube Server'
  inputs:
    SonarQube: 'sonar-service-con'
    scannerMode: cli
    configMode: manual
    cliProjectKey: Boardgame
    cliProjectName: Boardgame
    extraProperties: |
     # Additional properties that will be passed to the scanner, 
     # Put one key=value per line, example:
     # sonar.exclusions=**/*.bin
     sonar.java.binaries=.